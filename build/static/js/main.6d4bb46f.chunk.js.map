{"version":3,"sources":["config.js","components/elements/Dropdown/Dropdown.js","components/elements/Header/Header.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/LikeToggle/LikeToggle.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/Liked/Liked.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["CORS_URL","API_URL","API_KEY","IMAGE_BASE_URL","Dropdown","props","react_default","a","createElement","className","menu","map","element","i","key","onClick","handleClick","id","name","Head","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","displayToast","bind","assertThisInitialized","localStorage","getItem","history","push","alert","_this2","react_router_dom","to","handleClick2","elements_Dropdown_Dropdown","genres","style","color","src","alt","React","Component","Header","withRouter","HeroImage","background","concat","image","title","text","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","callback","lib_default","size","type","placeholder","onChange","FourColGrid","header","loading","children","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","genreId","genreName","searchItems","console","log","endpoint","fetchItems2","selectGenre","fetchItems","selectPopular","loadMoreItems","fetch","then","result","json","toConsumableArray","results","page","total_pages","setItem","JSON","stringify","parse","objectSpread","endpoint2","elements_Header_Header","elements_HeroImage_HeroImage","backdrop_path","original_title","overview","elements_SearchBar_SearchBar","elements_FourColGrid_FourColGrid","elements_MovieThumb_MovieThumb","poster_path","elements_Spinner_Spinner","elements_LoadMoreBtn_LoadMoreBtn","Navigation","movie","LikeToggle","toggleColor","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","elements_LikeToggle_LikeToggle","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","liked","likedMovies","handleLikeMovie","handleUnlikeMovie","slice","likedMovieList","forEach","likedMovie","index","object","splice","status_code","match","params","crew","filter","member","job","cast","catch","error","elements_Navigation_Navigation","location","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","runtime","elements_Actor_Actor","Liked","NotFound","App","basename","Fragment","react_router","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d4bb46f.chunk.js","sourcesContent":["// Configuration for TMDB\n// To see the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst CORS_URL = 'https://cors-anywhere.herokuapp.com/'\nconst API_URL = 'https://api.themoviedb.org/3/'; // herokuapp.com is used to add cors header 'access control allow origin'\nconst API_KEY = '79979058d89787a1a5a51cfeb9b5f66a';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  CORS_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\r\nimport './Dropdown.css';\r\n\r\nconst Dropdown = (props) => {\r\n    const renderDropdown = () => {\r\n        const dropdownItems = props.menu.map((element, i) => {\r\n            return (\r\n                <p key={i} onClick={() => props.handleClick(element.id, element.name)}>\r\n                    {element.name}\r\n                </p>\r\n            )\r\n        })\r\n        return dropdownItems;\r\n    }\r\n\r\n    return (\r\n        <div className=\"dropdown-content\">\r\n            {renderDropdown()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\nimport Dropdown from '../Dropdown/Dropdown';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass Head extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.displayToast = this.displayToast.bind(this);\r\n    }\r\n\r\n    displayToast() {\r\n        const likedMovies = localStorage.getItem('LikedMovieState');\r\n        if (!likedMovies) {\r\n            alert(`You don't have liked movies yet!`)\r\n            this.props.history.push(\"/\");\r\n        } else {\r\n            this.props.history.push(\"/liked\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-header\">\r\n                <div className=\"rmdb-header-content\">\r\n                    <div className=\"rmdb-header-content-left\">\r\n                        <Link to=\"/\" onClick={() => this.props.handleClick2()} className=\"left-menu\">\r\n                            <span>Popular</span>\r\n                        </Link>\r\n                        <div className=\"left-menu dropdown\">\r\n                            <div>Genre<span> </span> \r\n                                <i className=\"fa fa-caret-down\"></i>\r\n                                <Dropdown menu={this.props.genres} handleClick={this.props.handleClick} />\r\n                            </div>\r\n                        </div>\r\n                        <div onClick={() => this.displayToast()} className=\"left-menu pointer\">\r\n                            <i className=\"fa fa-heart\" style={{color: \"#ff0600\"}}></i>\r\n                            <span> </span>\r\n                            <span>Liked</span>                         \r\n                        </div>\r\n                    </div>\r\n                    <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Header = withRouter(Head);\r\n\r\nexport default Header;","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) => {\r\n    return (\r\n        <div className=\"rmdb-heroimage\"\r\n            style={{\r\n                background:\r\n                `linear-gradient(to bottom, rgba(0, 0, 0, 0)\r\n                39%, rgba(0, 0, 0, 0)\r\n                41%, rgba(0, 0, 0, 0.65)\r\n                100%),\r\n                url('${props.image}'), #1c1c1c`\r\n            }}\r\n        >\r\n            <div className=\"rmdb-heroimage-content\">\r\n                <div className=\"rmdb-heroimage-text\">\r\n                    <h1>{props.title}</h1>\r\n                    <p>{props.text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroImage;","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    doSearch = (event) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.props.callback(this.state.value);\r\n        }, 500);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-searchbar\">\r\n                <div className=\"rmdb-searchbar-content\">\r\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"rmdb-searchbar-input\"\r\n                        placeholder=\"Search Movie\"\r\n                        onChange={this.doSearch}\r\n                        value={this.state.value} \r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n    const renderElements = () => {\r\n        const gridElements = props.children.map((element, i) => {\r\n            return (\r\n                <div key={i} className=\"rmdb-grid-element\">\r\n                    {element}\r\n                </div>\r\n            )\r\n        })\r\n        \r\n        return gridElements;\r\n    }\r\n\r\n    return (\r\n        <div className=\"rmdb-grid\">\r\n            {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n            <div className=\"rmdb-grid-content\">\r\n                {renderElements()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FourColGrid;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = (props) => {\r\n    return (\r\n        <div className=\"rmdb-moviethumb\">\r\n            {props.clickable ? // if clickable is true, we link image to individual movie\r\n                <Link to={{ pathname: `/${props.movieId}`, movieName: `${props.movieName}` }}>\r\n                    <img src={props.image} alt=\"moviethumb\" />\r\n                </Link>\r\n            :\r\n                <img src={props.image} alt=\"moviethumb\" />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieThumb;","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n    return (\r\n        <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport { CORS_URL, API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from '../../config';\r\nimport Header from '../elements/Header/Header';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectGenre = this.selectGenre.bind(this);\r\n        this.selectPopular = this.selectPopular.bind(this);\r\n    }\r\n\r\n    state = {\r\n        movies: [],\r\n        heroImage: null,\r\n        loading: false,\r\n        currentPage: 0,\r\n        totalPages: 0,\r\n        searchTerm: '',\r\n        genres: [],\r\n        genreId: 0,\r\n        genreName: 'Popular'\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('HomeState')) {\r\n            const state = JSON.parse(localStorage.getItem('HomeState'));\r\n            this.setState({ ...state });\r\n        } else {\r\n            this.setState({\r\n                loading: true\r\n            })\r\n    \r\n            // fetch the genre list   \r\n            let endpoint = `${API_URL}genre/movie/list?api_key=${API_KEY}&language=en-US`;\r\n            fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                this.setState({\r\n                    genres: result.genres\r\n                })\r\n                console.log(this.state.genres)\r\n            })\r\n    \r\n            // fetch popular movies or movies from selected genre\r\n            let endpoint2 = '';\r\n            endpoint2 = (this.state.genreId === 0) \r\n            ? `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1` \r\n            : `${API_URL}discover/movie?api_key=${API_KEY}&language=en-US&with_genres=${this.state.genreId}&page=1`;\r\n            this.fetchItems(endpoint2);\r\n        }\r\n    }\r\n\r\n    searchItems = (searchTerm) => {\r\n        console.log(searchTerm);\r\n        let endpoint = '';\r\n        this.setState({\r\n            movies: [],\r\n            loading: true,\r\n            searchTerm // equal to SearchTerm = searchTerm\r\n        })\r\n\r\n        if (this.state.searchTerm === '') {\r\n            endpoint = (this.state.genreId === 0) \r\n            ? `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1` \r\n            : `${API_URL}discover/movie?api_key=${API_KEY}&language=en-US&with_genres=${this.state.genreId}&page=1`;\r\n        } else {\r\n            endpoint = `${CORS_URL}${API_URL}search/movie/?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=1`;\r\n        }\r\n\r\n        this.fetchItems2(endpoint);\r\n    }\r\n\r\n    selectGenre = (genreId, genreName) => {\r\n        let endpoint = '';\r\n        this.setState({\r\n            movies: [],\r\n            loading: true,\r\n            heroImage: null,\r\n            genreId,\r\n            genreName\r\n        })\r\n\r\n        endpoint = `${API_URL}discover/movie?api_key=${API_KEY}&language=en-US&with_genres=${genreId}&page=1`;\r\n\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    selectPopular = () => {\r\n        let endpoint = '';\r\n        this.setState({\r\n            movies: [],\r\n            loading: true,\r\n            heroImage: null,\r\n            genreId: 0,\r\n            genreName: 'Popular'\r\n        })\r\n\r\n        endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        let endpoint = '';\r\n        this.setState({\r\n            loading: true\r\n        })\r\n\r\n        if (this.state.searchTerm === '' && this.state.genreId === 0) {\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n        } else if (this.state.searchTerm === '' && this.state.genreId !== 0) {\r\n            endpoint = `${API_URL}discover/movie?api_key=${API_KEY}&language=en-US&with_genres=${this.state.genreId}&page=${this.state.currentPage + 1}`;\r\n        } else {\r\n            endpoint = `${CORS_URL}${API_URL}search/movie/?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n        }\r\n\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    // connect to API and fetch results\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n            console.log(result);\r\n            this.setState({\r\n                movies: [...this.state.movies, ...result.results],\r\n                heroImage: this.state.heroImage || result.results[0],\r\n                loading: false,\r\n                currentPage: result.page,\r\n                totalPages: result.total_pages\r\n            }, () => {\r\n                localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n            })\r\n        })\r\n    }\r\n\r\n    // connect to API and fetch results\r\n    fetchItems2 = (endpoint) => {\r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n            console.log(result);\r\n            this.setState({\r\n                movies: [...this.state.movies, ...result.results],\r\n                heroImage: this.state.heroImage || result.results[0],\r\n                loading: false,\r\n                currentPage: result.page,\r\n                totalPages: result.total_pages\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-home\">\r\n                {this.state.heroImage ? // render hero image and searchbar if present, otherwise return null\r\n                <div>\r\n                    <Header genres={this.state.genres} handleClick={this.selectGenre} handleClick2={this.selectPopular}/>\r\n                    <HeroImage \r\n                        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n                        title={this.state.heroImage.original_title}\r\n                        text={this.state.heroImage.overview}\r\n                            />\r\n                    <SearchBar callback={this.searchItems} />\r\n                </div> : null}\r\n\r\n                    <div className=\"rmdb-home-grid\">\r\n                        <FourColGrid \r\n                            header={this.state.searchTerm ? 'Search Results' : this.state.genreName + ' Movies'}\r\n                            loading={this.state.loading}\r\n                        >\r\n                            {this.state.movies.map((element, i) => {\r\n                                return <MovieThumb \r\n                                            key={i}\r\n                                            clickable={true}\r\n                                            image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                                            movieId={element.id}\r\n                                            movieName={element.original_title} \r\n                                            />\r\n                            })}\r\n                        </FourColGrid>\r\n                        {this.state.loading ? <Spinner /> : null}\r\n                        {(this.state.currentPage < this.state.totalPages && !this.state.loading) ? <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} /> \r\n                        : null}\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <div className=\"rmdb-navigation\">\r\n            <div className=\"rmdb-navigation-content\">\r\n                <Link to=\"/\">\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p>/</p>\r\n                <p>{props.movie}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './LikeToggle.css';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nclass LikeToggle extends React.Component {\r\n    render() {\r\n        return(\r\n            <FontAwesome \r\n                className=\"fa-heart\" \r\n                name=\"heart\" size=\"3x\" \r\n                onClick={() => this.props.handleClick()} \r\n                style={{ color: this.props.toggleColor }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default LikeToggle;","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport LikeToggle from '../LikeToggle/LikeToggle';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfo\"\r\n            style={{\r\n                background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : 'black'\r\n            }}\r\n        >\r\n            <div className=\"rmdb-movieinfo-content\">\r\n                <div className=\"rmdb-movieinfo-thumb\">\r\n                    <MovieThumb\r\n                        image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'}\r\n                        clickable={false}\r\n                    />\r\n                </div>\r\n                <div className=\"rmdb-movieinfo-text\">\r\n                    <h1>{props.movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{props.movie.overview}</p>\r\n\r\n                    <h3>IMDB RATING</h3>\r\n                    <div className=\"rmdb-rating\">\r\n                        <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n                        <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n                    </div>\r\n\r\n                    {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n                    {props.directors.map((element, i) => {\r\n                        return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n                    })}\r\n                </div>\r\n                <LikeToggle handleClick={props.handleClick} toggleColor={props.toggleColor} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers.js';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfobar\">\r\n            <div className=\"rmdb-movieinfobar-content\">\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(props.time)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\"/>\r\n                    <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfoBar;","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = (props) => {\r\n    const POSTER_SIZE = \"w154\";\r\n\r\n    return (\r\n        <div className=\"rmdb-actor\">\r\n            <img\r\n                src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\r\n                alt=\"actorthumb\"\r\n            />\r\n            <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n            <span className=\"rmdb-actor-character\">as</span>\r\n            <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Actor;","import React from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\nclass Movie extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLikeMovie = this.handleLikeMovie.bind(this);\r\n    }\r\n\r\n    state = {\r\n        movie: null,\r\n        actors: null,\r\n        directors: [],\r\n        loading: false,\r\n        liked: false,\r\n        toggleColor: '#fff',\r\n        likedMovies: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('LikedMovieState')) {\r\n            const state = JSON.parse(localStorage.getItem('LikedMovieState').slice(0));\r\n            this.setState({\r\n                likedMovies: [ ...state ]\r\n            })\r\n        }\r\n\r\n        this.setState({ loading: true })\r\n        // first fetch the movie...\r\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    handleLikeMovie = () => {\r\n        if (this.state.liked) {\r\n            this.setState({\r\n                liked: false,\r\n                toggleColor: '#fff'\r\n            })\r\n            this.handleUnlikeMovie(this.state.movie);\r\n        } else {\r\n            this.setState({\r\n                liked: true,\r\n                toggleColor: '#f00',\r\n                likedMovies: [this.state.movie, ...this.state.likedMovies]\r\n            }, () => {\r\n                localStorage.setItem('LikedMovieState', JSON.stringify(this.state.likedMovies));\r\n            })\r\n            console.log(this.state.likedMovies.slice(0));\r\n        }\r\n        console.log(this.state.liked);\r\n    }\r\n    \r\n    handleUnlikeMovie = (movie) => {\r\n        let likedMovieList = this.state.likedMovies;\r\n        likedMovieList.forEach((likedMovie, index, object) => {\r\n            if (likedMovie.id === movie.id) {\r\n                object.splice(index, 1);\r\n            }\r\n        })\r\n\r\n        // likedMovieList.splice(likedMovieList.indexOf(movie), 1);\r\n        this.setState({\r\n            liked: false,\r\n            toggleColor: '#fff',\r\n            likedMovies: likedMovieList\r\n        }, () => {\r\n            localStorage.setItem('LikedMovieState', JSON.stringify(this.state.likedMovies));\r\n        })\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n            if(result.status_code) { //status code means we didn't manage to grab a movie\r\n                this.setState({ loading: false });\r\n            } else {\r\n                this.setState({ movie: result }, () => {\r\n                    const likedMovieList = this.state.likedMovies;\r\n                    likedMovieList.forEach((movie) => {\r\n                        if (movie.id === result.id) {\r\n                            this.setState({\r\n                                liked: true,\r\n                                toggleColor: '#f00'\r\n                            })\r\n                        }\r\n                    })\r\n\r\n                    // ... then fetch the movie actors in the setState() callback function\r\n                    endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n                    fetch(endpoint)\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        console.log(result); \r\n                        const directors = result.crew.filter(member => member.job === \"Director\");\r\n\r\n                        this.setState({\r\n                            actors: result.cast,\r\n                            directors,\r\n                            loading: false\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n        })\r\n        .catch(error => console.error('Error', error));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-movie\">\r\n                {this.state.movie ? //if a movie is found\r\n                    <div>\r\n                        <Navigation movie={this.props.location.movieName} />\r\n                        <MovieInfo movie={this.state.movie} directors={this.state.directors} handleClick={this.handleLikeMovie} toggleColor={this.state.toggleColor}/>\r\n                        <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\r\n                    </div>\r\n                : null}\r\n\r\n                {this.state.actors ? \r\n                    <div className=\"rmdb-movie-grid\">\r\n                        <FourColGrid header={'Actors'}>\r\n                            {this.state.actors.map((element, i) => {\r\n                                return <Actor key={i} actor={element} />\r\n                            })}\r\n                        </FourColGrid>\r\n                    </div> \r\n                : null }\r\n\r\n                {!this.state.actors && !this.state.loading ? <h1>No Movie Found!</h1> : null}\r\n                {this.state.loading ? <Spinner /> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from '../../config';\r\nimport Header from '../elements/Header/Header';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Liked.css';\r\n\r\nclass Liked extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectGenre = this.selectGenre.bind(this);\r\n        this.selectPopular = this.selectPopular.bind(this);\r\n    }\r\n\r\n    state = {\r\n        movies: [],\r\n        heroImage: null,\r\n        loading: false,\r\n        // currentPage: 0,\r\n        // totalPages: 0,\r\n        // searchTerm: '',\r\n        genres: [],\r\n        genreId: 0,\r\n        // genreName: 'Liked'\r\n    }\r\n\r\n    selectGenre = (genreId, genreName) => {\r\n        let endpoint = '';\r\n        this.setState({\r\n            movies: [],\r\n            loading: true,\r\n            heroImage: null,\r\n            genreId,\r\n            genreName\r\n        })\r\n\r\n        endpoint = `${API_URL}discover/movie?api_key=${API_KEY}&language=en-US&with_genres=${genreId}&page=1`;\r\n\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    selectPopular = () => {\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('LikedMovieState')) {\r\n            const likedMovies = JSON.parse(localStorage.getItem('LikedMovieState'));\r\n            this.setState({\r\n                movies: [ ...likedMovies ],\r\n                heroImage: likedMovies[0]\r\n            });\r\n\r\n            // fetch the genre list   \r\n            let endpoint = `${API_URL}genre/movie/list?api_key=${API_KEY}&language=en-US`;\r\n            fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                this.setState({\r\n                    genres: result.genres\r\n                })\r\n                console.log(this.state.genres)\r\n            })\r\n        } else {\r\n            this.setState({\r\n                loading: true\r\n            })\r\n    \r\n            // fetch the genre list   \r\n            let endpoint = `${API_URL}genre/movie/list?api_key=${API_KEY}&language=en-US`;\r\n            fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                this.setState({\r\n                    genres: result.genres\r\n                })\r\n                console.log(this.state.genres)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-home\">\r\n                {this.state.heroImage ? // render hero image and searchbar if present, otherwise return null\r\n                <div>\r\n                    <Header genres={this.state.genres} handleClick={this.selectPopular} handleClick2={this.selectPopular}/>\r\n                    <HeroImage \r\n                        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n                        title={this.state.heroImage.original_title}\r\n                        text={this.state.heroImage.overview}\r\n                            />\r\n                </div> : null}\r\n\r\n                    <div className=\"rmdb-home-grid\">\r\n                        <FourColGrid \r\n                            header={'Liked Movies'}\r\n                            loading={this.state.loading}\r\n                        >\r\n                            {this.state.movies.map((element, i) => {\r\n                                return <MovieThumb \r\n                                            key={i}\r\n                                            clickable={true}\r\n                                            image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                                            movieId={element.id}\r\n                                            movieName={element.original_title} \r\n                                            />\r\n                            })}\r\n                        </FourColGrid>\r\n                        {this.state.loading ? <Spinner /> : null}\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Liked;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>\r\n                Page Not Found. \r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n// import Header from '../elements/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport Movie from '../Movie/Movie';\r\nimport Liked from '../Liked/Liked';\r\nimport NotFound from '../elements/NotFound/NotFound';\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter basename='/react-movie-app/'>\r\n            <React.Fragment>\r\n                <Switch>\r\n                    <Route path=\"/\" component={Home} exact />\r\n                    <Route path=\"/liked\" component={Liked} exact />\r\n                    <Route path=\"/:movieId\" component={Movie} exact />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n\r\n            </React.Fragment>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}