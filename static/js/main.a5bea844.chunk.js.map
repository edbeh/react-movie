{"version":3,"sources":["config.js","components/elements/Dropdown/Dropdown.js","components/elements/Header/Header.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/LikeToggle/LikeToggle.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/Liked/Liked.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["API_URL","API_KEY","IMAGE_BASE_URL","Dropdown","props","className","menu","map","element","i","key","onClick","handleClick","id","name","Head","displayToast","bind","localStorage","getItem","this","history","push","alert","to","handleClick2","genres","style","color","src","alt","React","Component","Header","withRouter","HeroImage","background","image","title","text","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","callback","size","type","placeholder","onChange","FourColGrid","header","loading","children","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","genreId","genreName","searchItems","console","log","endpoint","fetchItems2","selectGenre","fetchItems","selectPopular","loadMoreItems","fetch","then","result","json","results","page","total_pages","setItem","JSON","stringify","parse","endpoint2","backdrop_path","original_title","overview","poster_path","Navigation","movie","LikeToggle","toggleColor","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","liked","likedMovies","handleLikeMovie","handleUnlikeMovie","slice","likedMovieList","forEach","likedMovie","index","object","splice","status_code","match","params","crew","filter","member","job","cast","catch","error","location","runtime","Liked","NotFound","App","basename","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5bea844.chunk.js","sourcesContent":["// Configuration for TMDB\n// To see the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst CORS_URL = 'https://cors-anywhere.herokuapp.com/'\nconst API_URL = 'https://api.themoviedb.org/3/'; // herokuapp.com is used to add cors header 'access control allow origin'\nconst API_KEY = '79979058d89787a1a5a51cfeb9b5f66a';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  CORS_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\r\nimport './Dropdown.css';\r\n\r\nconst Dropdown = (props) => {\r\n    const renderDropdown = () => {\r\n        const dropdownItems = props.menu.map((element, i) => {\r\n            return (\r\n                <p key={i} onClick={() => props.handleClick(element.id, element.name)}>\r\n                    {element.name}\r\n                </p>\r\n            )\r\n        })\r\n        return dropdownItems;\r\n    }\r\n\r\n    return (\r\n        <div className=\"dropdown-content\">\r\n            {renderDropdown()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\nimport Dropdown from '../Dropdown/Dropdown';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass Head extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.displayToast = this.displayToast.bind(this);\r\n    }\r\n\r\n    displayToast() {\r\n        const likedMovies = localStorage.getItem('LikedMovieState');\r\n        if (!likedMovies) {\r\n            alert(`You don't have liked movies yet!`)\r\n            this.props.history.push(\"/\");\r\n        } else {\r\n            this.props.history.push(\"/liked\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-header\">\r\n                <div className=\"rmdb-header-content\">\r\n                    <div className=\"rmdb-header-content-left\">\r\n                        <Link to=\"/\" onClick={() => this.props.handleClick2()} className=\"left-menu\">\r\n                            <span>Popular</span>\r\n                        </Link>\r\n                        <div className=\"left-menu dropdown\">\r\n                            <div>Genre<span> </span> \r\n                                <i className=\"fa fa-caret-down\"></i>\r\n                                <Dropdown menu={this.props.genres} handleClick={this.props.handleClick} />\r\n                            </div>\r\n                        </div>\r\n                        <div onClick={() => this.displayToast()} className=\"left-menu pointer\">\r\n                            <i className=\"fa fa-heart\" style={{color: \"#ff0600\"}}></i>\r\n                            <span> </span>\r\n                            <span>Liked</span>                         \r\n                        </div>\r\n                    </div>\r\n                    <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Header = withRouter(Head);\r\n\r\nexport default Header;","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) => {\r\n    return (\r\n        <div className=\"rmdb-heroimage\"\r\n            style={{\r\n                background:\r\n                `linear-gradient(to bottom, rgba(0, 0, 0, 0)\r\n                39%, rgba(0, 0, 0, 0)\r\n                41%, rgba(0, 0, 0, 0.65)\r\n                100%),\r\n                url('${props.image}'), #1c1c1c`\r\n            }}\r\n        >\r\n            <div className=\"rmdb-heroimage-content\">\r\n                <div className=\"rmdb-heroimage-text\">\r\n                    <h1>{props.title}</h1>\r\n                    <p>{props.text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeroImage;","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    timeout = null;\r\n\r\n    doSearch = (event) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.props.callback(this.state.value);\r\n        }, 500);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-searchbar\">\r\n                <div className=\"rmdb-searchbar-content\">\r\n                    <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n                    <input \r\n                        type=\"text\"\r\n                        className=\"rmdb-searchbar-input\"\r\n                        placeholder=\"Search Movie\"\r\n                        onChange={this.doSearch}\r\n                        value={this.state.value} \r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n    const renderElements = () => {\r\n        const gridElements = props.children.map((element, i) => {\r\n            return (\r\n                <div key={i} className=\"rmdb-grid-element\">\r\n                    {element}\r\n                </div>\r\n            )\r\n        })\r\n        \r\n        return gridElements;\r\n    }\r\n\r\n    return (\r\n        <div className=\"rmdb-grid\">\r\n            {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n            <div className=\"rmdb-grid-content\">\r\n                {renderElements()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FourColGrid;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = (props) => {\r\n    return (\r\n        <div className=\"rmdb-moviethumb\">\r\n            {props.clickable ? // if clickable is true, we link image to individual movie\r\n                <Link to={{ pathname: `/${props.movieId}`, movieName: `${props.movieName}` }}>\r\n                    <img src={props.image} alt=\"moviethumb\" />\r\n                </Link>\r\n            :\r\n                <img src={props.image} alt=\"moviethumb\" />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieThumb;","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n    return (\r\n        <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\"></div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from \"react\";\r\nimport {\r\n  CORS_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n} from \"../../config\";\r\nimport Header from \"../elements/Header/Header\";\r\nimport HeroImage from \"../elements/HeroImage/HeroImage\";\r\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\r\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\r\nimport MovieThumb from \"../elements/MovieThumb/MovieThumb\";\r\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/LoadMoreBtn\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectGenre = this.selectGenre.bind(this);\r\n    this.selectPopular = this.selectPopular.bind(this);\r\n  }\r\n\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: \"\",\r\n    genres: [],\r\n    genreId: 0,\r\n    genreName: \"Popular\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"HomeState\")) {\r\n      const state = JSON.parse(localStorage.getItem(\"HomeState\"));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({\r\n        loading: true,\r\n      });\r\n\r\n      // fetch the genre list\r\n      let endpoint = `${API_URL}genre/movie/list?api_key=${API_KEY}&language=en-US`;\r\n      fetch(endpoint)\r\n        .then((result) => result.json())\r\n        .then((result) => {\r\n          this.setState({\r\n            genres: result.genres,\r\n          });\r\n          console.log(this.state.genres);\r\n        });\r\n\r\n      // fetch popular movies or movies from selected genre\r\n      let endpoint2 = \"\";\r\n      endpoint2 =\r\n        this.state.genreId === 0\r\n          ? `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`\r\n          : `${API_URL}discover/movie?api_key=${API_KEY}&language=en-US&with_genres=${this.state.genreId}&page=1`;\r\n      this.fetchItems(endpoint2);\r\n    }\r\n  }\r\n\r\n  searchItems = (searchTerm) => {\r\n    console.log(searchTerm);\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm, // equal to SearchTerm = searchTerm\r\n    });\r\n\r\n    if (this.state.searchTerm === \"\") {\r\n      endpoint =\r\n        this.state.genreId === 0\r\n          ? `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`\r\n          : `${API_URL}discover/movie?api_key=${API_KEY}&language=en-US&with_genres=${this.state.genreId}&page=1`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie/?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=1`;\r\n      console.log(endpoint);\r\n    }\r\n\r\n    this.fetchItems2(endpoint);\r\n  };\r\n\r\n  selectGenre = (genreId, genreName) => {\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      heroImage: null,\r\n      genreId,\r\n      genreName,\r\n    });\r\n\r\n    endpoint = `${API_URL}discover/movie?api_key=${API_KEY}&language=en-US&with_genres=${genreId}&page=1`;\r\n\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  selectPopular = () => {\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      heroImage: null,\r\n      genreId: 0,\r\n      genreName: \"Popular\",\r\n    });\r\n\r\n    endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  loadMoreItems = () => {\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    if (this.state.searchTerm === \"\" && this.state.genreId === 0) {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${\r\n        this.state.currentPage + 1\r\n      }`;\r\n    } else if (this.state.searchTerm === \"\" && this.state.genreId !== 0) {\r\n      endpoint = `${API_URL}discover/movie?api_key=${API_KEY}&language=en-US&with_genres=${\r\n        this.state.genreId\r\n      }&page=${this.state.currentPage + 1}`;\r\n    } else {\r\n      endpoint = `${CORS_URL}${API_URL}search/movie/?api_key=${API_KEY}&language=en-US&query=${\r\n        this.state.searchTerm\r\n      }&page=${this.state.currentPage + 1}`;\r\n    }\r\n\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  // connect to API and fetch results\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        this.setState(\r\n          {\r\n            movies: [...this.state.movies, ...result.results],\r\n            heroImage: this.state.heroImage || result.results[0],\r\n            loading: false,\r\n            currentPage: result.page,\r\n            totalPages: result.total_pages,\r\n          },\r\n          () => {\r\n            localStorage.setItem(\"HomeState\", JSON.stringify(this.state));\r\n          }\r\n        );\r\n      });\r\n  };\r\n\r\n  // connect to API and fetch results\r\n  fetchItems2 = (endpoint) => {\r\n    fetch(endpoint)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        this.setState({\r\n          movies: [...this.state.movies, ...result.results],\r\n          heroImage: this.state.heroImage || result.results[0],\r\n          loading: false,\r\n          currentPage: result.page,\r\n          totalPages: result.total_pages,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-home\">\r\n        {this.state.heroImage ? ( // render hero image and searchbar if present, otherwise return null\r\n          <div>\r\n            <Header\r\n              genres={this.state.genres}\r\n              handleClick={this.selectGenre}\r\n              handleClick2={this.selectPopular}\r\n            />\r\n            <HeroImage\r\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n              title={this.state.heroImage.original_title}\r\n              text={this.state.heroImage.overview}\r\n            />\r\n            <SearchBar callback={this.searchItems} />\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className=\"rmdb-home-grid\">\r\n          <FourColGrid\r\n            header={\r\n              this.state.searchTerm\r\n                ? \"Search Results\"\r\n                : this.state.genreName + \" Movies\"\r\n            }\r\n            loading={this.state.loading}\r\n          >\r\n            {this.state.movies.map((element, i) => {\r\n              return (\r\n                <MovieThumb\r\n                  key={i}\r\n                  clickable={true}\r\n                  image={\r\n                    element.poster_path\r\n                      ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\r\n                      : \"./images/no_image.jpg\"\r\n                  }\r\n                  movieId={element.id}\r\n                  movieName={element.original_title}\r\n                />\r\n              );\r\n            })}\r\n          </FourColGrid>\r\n          {this.state.loading ? <Spinner /> : null}\r\n          {this.state.currentPage < this.state.totalPages &&\r\n          !this.state.loading ? (\r\n            <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <div className=\"rmdb-navigation\">\r\n            <div className=\"rmdb-navigation-content\">\r\n                <Link to=\"/\">\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p>/</p>\r\n                <p>{props.movie}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './LikeToggle.css';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nclass LikeToggle extends React.Component {\r\n    render() {\r\n        return(\r\n            <FontAwesome \r\n                className=\"fa-heart\" \r\n                name=\"heart\" size=\"3x\" \r\n                onClick={() => this.props.handleClick()} \r\n                style={{ color: this.props.toggleColor }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default LikeToggle;","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport LikeToggle from '../LikeToggle/LikeToggle';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfo\"\r\n            style={{\r\n                background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : 'black'\r\n            }}\r\n        >\r\n            <div className=\"rmdb-movieinfo-content\">\r\n                <div className=\"rmdb-movieinfo-thumb\">\r\n                    <MovieThumb\r\n                        image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'}\r\n                        clickable={false}\r\n                    />\r\n                </div>\r\n                <div className=\"rmdb-movieinfo-text\">\r\n                    <h1>{props.movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{props.movie.overview}</p>\r\n\r\n                    <h3>IMDB RATING</h3>\r\n                    <div className=\"rmdb-rating\">\r\n                        <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n                        <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n                    </div>\r\n\r\n                    {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n                    {props.directors.map((element, i) => {\r\n                        return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n                    })}\r\n                </div>\r\n                <LikeToggle handleClick={props.handleClick} toggleColor={props.toggleColor} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers.js';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfobar\">\r\n            <div className=\"rmdb-movieinfobar-content\">\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(props.time)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\"/>\r\n                    <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfoBar;","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = (props) => {\r\n    const POSTER_SIZE = \"w154\";\r\n\r\n    return (\r\n        <div className=\"rmdb-actor\">\r\n            <img\r\n                src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\r\n                alt=\"actorthumb\"\r\n            />\r\n            <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n            <span className=\"rmdb-actor-character\">as</span>\r\n            <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Actor;","import React from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\nclass Movie extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleLikeMovie = this.handleLikeMovie.bind(this);\r\n    }\r\n\r\n    state = {\r\n        movie: null,\r\n        actors: null,\r\n        directors: [],\r\n        loading: false,\r\n        liked: false,\r\n        toggleColor: '#fff',\r\n        likedMovies: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('LikedMovieState')) {\r\n            const state = JSON.parse(localStorage.getItem('LikedMovieState').slice(0));\r\n            this.setState({\r\n                likedMovies: [ ...state ]\r\n            })\r\n        }\r\n\r\n        this.setState({ loading: true })\r\n        // first fetch the movie...\r\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    handleLikeMovie = () => {\r\n        if (this.state.liked) {\r\n            this.setState({\r\n                liked: false,\r\n                toggleColor: '#fff'\r\n            })\r\n            this.handleUnlikeMovie(this.state.movie);\r\n        } else {\r\n            this.setState({\r\n                liked: true,\r\n                toggleColor: '#f00',\r\n                likedMovies: [this.state.movie, ...this.state.likedMovies]\r\n            }, () => {\r\n                localStorage.setItem('LikedMovieState', JSON.stringify(this.state.likedMovies));\r\n            })\r\n            console.log(this.state.likedMovies.slice(0));\r\n        }\r\n        console.log(this.state.liked);\r\n    }\r\n    \r\n    handleUnlikeMovie = (movie) => {\r\n        let likedMovieList = this.state.likedMovies;\r\n        likedMovieList.forEach((likedMovie, index, object) => {\r\n            if (likedMovie.id === movie.id) {\r\n                object.splice(index, 1);\r\n            }\r\n        })\r\n\r\n        // likedMovieList.splice(likedMovieList.indexOf(movie), 1);\r\n        this.setState({\r\n            liked: false,\r\n            toggleColor: '#fff',\r\n            likedMovies: likedMovieList\r\n        }, () => {\r\n            localStorage.setItem('LikedMovieState', JSON.stringify(this.state.likedMovies));\r\n        })\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n        .then(result => result.json())\r\n        .then(result => {\r\n            if(result.status_code) { //status code means we didn't manage to grab a movie\r\n                this.setState({ loading: false });\r\n            } else {\r\n                this.setState({ movie: result }, () => {\r\n                    const likedMovieList = this.state.likedMovies;\r\n                    likedMovieList.forEach((movie) => {\r\n                        if (movie.id === result.id) {\r\n                            this.setState({\r\n                                liked: true,\r\n                                toggleColor: '#f00'\r\n                            })\r\n                        }\r\n                    })\r\n\r\n                    // ... then fetch the movie actors in the setState() callback function\r\n                    endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n                    fetch(endpoint)\r\n                    .then(result => result.json())\r\n                    .then(result => {\r\n                        console.log(result); \r\n                        const directors = result.crew.filter(member => member.job === \"Director\");\r\n\r\n                        this.setState({\r\n                            actors: result.cast,\r\n                            directors,\r\n                            loading: false\r\n                        })\r\n                    })\r\n                })\r\n            }\r\n        })\r\n        .catch(error => console.error('Error', error));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-movie\">\r\n                {this.state.movie ? //if a movie is found\r\n                    <div>\r\n                        <Navigation movie={this.props.location.movieName} />\r\n                        <MovieInfo movie={this.state.movie} directors={this.state.directors} handleClick={this.handleLikeMovie} toggleColor={this.state.toggleColor}/>\r\n                        <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\r\n                    </div>\r\n                : null}\r\n\r\n                {this.state.actors ? \r\n                    <div className=\"rmdb-movie-grid\">\r\n                        <FourColGrid header={'Actors'}>\r\n                            {this.state.actors.map((element, i) => {\r\n                                return <Actor key={i} actor={element} />\r\n                            })}\r\n                        </FourColGrid>\r\n                    </div> \r\n                : null }\r\n\r\n                {!this.state.actors && !this.state.loading ? <h1>No Movie Found Here!</h1> : null}\r\n                {this.state.loading ? <Spinner /> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from '../../config';\r\nimport Header from '../elements/Header/Header';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Liked.css';\r\n\r\nclass Liked extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectGenre = this.selectGenre.bind(this);\r\n        this.selectPopular = this.selectPopular.bind(this);\r\n    }\r\n\r\n    state = {\r\n        movies: [],\r\n        heroImage: null,\r\n        loading: false,\r\n        // currentPage: 0,\r\n        // totalPages: 0,\r\n        // searchTerm: '',\r\n        genres: [],\r\n        genreId: 0,\r\n        // genreName: 'Liked'\r\n    }\r\n\r\n    selectGenre = (genreId, genreName) => {\r\n        let endpoint = '';\r\n        this.setState({\r\n            movies: [],\r\n            loading: true,\r\n            heroImage: null,\r\n            genreId,\r\n            genreName\r\n        })\r\n\r\n        endpoint = `${API_URL}discover/movie?api_key=${API_KEY}&language=en-US&with_genres=${genreId}&page=1`;\r\n\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    selectPopular = () => {\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('LikedMovieState')) {\r\n            const likedMovies = JSON.parse(localStorage.getItem('LikedMovieState'));\r\n            this.setState({\r\n                movies: [ ...likedMovies ],\r\n                heroImage: likedMovies[0]\r\n            });\r\n\r\n            // fetch the genre list   \r\n            let endpoint = `${API_URL}genre/movie/list?api_key=${API_KEY}&language=en-US`;\r\n            fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                this.setState({\r\n                    genres: result.genres\r\n                })\r\n                console.log(this.state.genres)\r\n            })\r\n        } else {\r\n            this.setState({\r\n                loading: true\r\n            })\r\n    \r\n            // fetch the genre list   \r\n            let endpoint = `${API_URL}genre/movie/list?api_key=${API_KEY}&language=en-US`;\r\n            fetch(endpoint)\r\n            .then(result => result.json())\r\n            .then(result => {\r\n                this.setState({\r\n                    genres: result.genres\r\n                })\r\n                console.log(this.state.genres)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-home\">\r\n                {this.state.heroImage ? // render hero image and searchbar if present, otherwise return null\r\n                <div>\r\n                    <Header genres={this.state.genres} handleClick={this.selectPopular} handleClick2={this.selectPopular}/>\r\n                    <HeroImage \r\n                        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n                        title={this.state.heroImage.original_title}\r\n                        text={this.state.heroImage.overview}\r\n                            />\r\n                </div> : null}\r\n\r\n                    <div className=\"rmdb-home-grid\">\r\n                        <FourColGrid \r\n                            header={'Liked Movies'}\r\n                            loading={this.state.loading}\r\n                        >\r\n                            {this.state.movies.map((element, i) => {\r\n                                return <MovieThumb \r\n                                            key={i}\r\n                                            clickable={true}\r\n                                            image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                                            movieId={element.id}\r\n                                            movieName={element.original_title} \r\n                                            />\r\n                            })}\r\n                        </FourColGrid>\r\n                        {this.state.loading ? <Spinner /> : null}\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Liked;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>\r\n                Page Not Found. \r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n// import Header from '../elements/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport Movie from '../Movie/Movie';\r\nimport Liked from '../Liked/Liked';\r\nimport NotFound from '../elements/NotFound/NotFound';\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter  basename='/react-movie/'>\r\n            <React.Fragment>\r\n                <Switch>\r\n                    <Route path=\"/\" component={Home} exact />\r\n                    <Route path=\"/liked\" component={Liked} exact />\r\n                    <Route path=\"/:movieId\" component={Movie} exact />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n\r\n            </React.Fragment>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}